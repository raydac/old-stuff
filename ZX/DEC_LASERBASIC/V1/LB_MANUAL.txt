         ╔═════════════════════════════════════════════╗
         ║      HOME VIDEO GAMES ENTERPRISE 1994       ║
         ╠═════════════════════════════════════════════╣
         ║░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░║
         ║░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓╔══════════════╗▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓║LIBRARY  LASER║▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓║ BASIC v 1.00 ║▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓║     FOR      ║▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓║ PROFESSIONAL ║▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓╚══════════════╝▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▒▒░░░░░║
         ║░░░░▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒░░░░░║
         ║░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░║
         ╚═════════════════════════════════════════════╝

     
     1.Введение
     
     Всем  пользователям  ZX-SPECTRUM хорошо известен графический пакет
LASER  BASIC.  Этот пакет программ, предназначенный для манипулирования
графическим  изображением.  С  его  помощью  можно  выводить  на  экран
монитора картинки (спрайты), инвертировать их, зеркально отображать, и,
что  самое  ценное,  самое  нужное  и самое приятное - перемещать их по
экрану.   Довольно  быстро  и  без  особых  ухищрений  можно  создавать
мультфильмы и даже динамические игры.
     Картинки  подготавливаются  в  специальной  программе - генераторе
спрайтов,  входящей  в пакет LASER BASIC или воспользоваться программой
SPRITER,  написанной  П.Карповым,  которая  позволяет  исползовать  для
создания  спрайтов  готовые  картинки  из любого графического редактора
(ART  STUDIO,  ARTIST  2)  или  даже позаимствовать готовые картинки из
фирменных  программ. более подробную иншормацию можно получить из книги
издательства  "ПИТЕР"  под редакцией Н.Родионова и А.Ларченко "ДИАЛЕКТЫ
БЕЙСИКА для ZX Spectrum".
     
     2.Терминология
     
     Основные  объекты,  которыми  оперирует  LASER BASIC, - это ОКНА и
СПРАЙТЫ.
     ОКНО   ЭКРАНА   выделяет   прямоугольную   область,   на   которую
распространяется    действие    операторов,   выполняющих   графические
преобразования.  ОКНО  задается  с точностью до знакоместа координатами
левого верхнего угла, шириной и высотой.
     Другой  объект,  с  которым  имеет дело LASER BASIC, - это СПРАЙТ.
Если  ОКНО  привяззывается  к некой области экрана (причем безразлично,
что  в этой области изображено), то спрайт, наоборот, имеет собственный
внешний вид и может "гулять" по экрану. СПРАЙТ (от англ. sprite - эльф)
можно  определить  как  перемещаемый  графический  объект  с неизменным
рисунком  и размером. СПРАЙТЫ создаются обычно до написания программы и
хранятся  в  памяти  компьютера  в виде так называемого СПРАЙТ - ФАЙЛА.
СПРАЙТ  -  ФАЙЛ  может  объединять  до 255 спрайтов разного размера (от
знакоместа и более). По желанию программиста спрайты могут быть вызваны
из СПРАЙТ - ФАЙЛА и помещены на экран, где с ними можно делать все, что
позволит LASER BASIC, и, конечно, передвигать.
     Кроме  термина "ОКНО ЭКРАНА" (или просто - ОКНО) в лексиконе LASER
BASIC  есть  еще  и  такое  понятие,  как  ОКНО  СПРАЙТА,  обозначающее
прямоугольную  область  СПРАЙТА.  Выделение  в  СПРАЙТЕ  ОКНА позволяет
трансформировать,  а  также  выводить  на  экран не только целиком весь
СПРАЙТ, но и часть его, что бывает очень полезно.   
                               - 2 -

     3.Обзор библиотеки

     И  вот,  благодаря  фирме  Home  Video  Games  ENT.,  мы  получили
возможность использовать в своих программах графические процедуры LASER
BASIC, без опеки интерпритатора LASER BASIC.

     3.1 Состав библиотеки

     Весь  пакет состоит из 5 файлов, три из которых записаны в формате
GENS4D :
     LB_TEXT0 <C> - файл содержит текст программы подгрузки основных
                    блоков.
     LB_TEXT1 <C> - файл содержит тексты всех видеопроцедур LASER
                    BASIC.
     LB_TEXT2 <C> - файл содержит тексты подпрограмм LASER BASIC для
                    использования спрайтов и спрайт-файла.
     LB_TEXT3 <W> - первая часть данной инструкции.

     LB_TEXT4 <W> - вторая часть данной инструкции.

     3.2 Использование библиотеки в программах

     В  библиотеке  реализованы  почти  все команды LASER BASIC (список
всех  команд  дан  в  ПРИЛОЖЕНИИ  1).  Названия  подпрограмм в основном
соответствуют  аналогичным  командам LASER BASICA. При разработке своих
программ,  если  вы  используете  библиотеку, вы должны к своему тексту
программы подгрузить файл LB_TEXT0, который автоматически подгрузит при
ассемблировании  вашей  программы  библиотеку.  Ассемблировать  нужно с
размером  буфера  для меток не менее 4800 байт плюс размер буфера меток
для вашей программы. Ассемблированная библиотека занимает примерно 3500
байт.

     3.2.1 Работа с окнами экрана

     Итак,  в  первом  файле  LB_TEXT1  <C> содержатся подпрограммы для
обработки  ОКОН  ЭКРАНА. Список всех "видео" программ библиотеки даны в
ПРИЛОЖЕНИИ 1. Для исползования почти всех этих подпрограмм нужно:

     LD B,#00  - загрузить в регистр В координату Y oкна.
     LD С,#00  - загрузить в регистр С координату X oкна. 
     LD H,#05  - загрузить в регистр H размер окна по вер-
                 тикали (высота окна).
     LD L,#05  - загрузить в регистр L размер окна по го-
                 ризомтали (ширима окна).    
     CALL INVV - выполнить нужную подпрограмму.

Исключение  составляют  команды  вертикального  сдвига  экрана - SCRV и
WCRV,  для  которых нужно в аккумулятор процессора загрузить величину и
направление   смещения   перед  выполнением  команды  (может  принимать
значение от -127 до 127).

     LD A,#01  - направление определяется знаком: положитеное
                 значение соответствует скроллингу вверх, от-
                 рицательное - вниз. Модуль - задает шаг в пи-
                 ксилях.
     
                               - 3 -

    ВНИМАНИЕ ! В  операциях   вертикального  скроллинга  задействована
               область  буфера  принтера.  И так как ее объем ограничен
               256  байтами,  то  вертикальный скроллинг возможен лишь,
               если  результат  перемножения значений шага скроллинга и
               ширины окна не превышает 256. Но вы можете переназначить
               адрес  буфера в библиотеке. Для этого нужно адрес буфера
               записать  по  адресу  АDR,  сначала младший байт адреса,
               затем  старший  (Помните,  что  длина буфера вычисляется
               перемножением  шага  скроллинга  и  шириной окна). ADR -
               адрес ассемблирования библиотеки.

Также  состовляет  исключение команда SETV, для которой нужно задать по
адресу   (АDR   +   6)  атрибуты  окна  (ADR  -  адрес  ассемблирования
библиотеки). В библиотеке изменены команды скроллинга атрибутов, теперь
команды   AWLV   и  ARWV  выполняют  циклический  скроллинг   атрибутов
соответственно  влево  и  вправо,  а  команды  ASLV  и  ASRV  - обычный
скроллинг  атрибутов  влево и вправо. Формат задания для них параметров
не изменен.

    ВНИМАНИЕ ! Файл  LB_TEXT1  можно использовать отдельно от остальной
               библиотеки  (То  есть  если  вам  нужны  только  "видео"
               подпрограммы.).Ассемблирование  этого  файла  выдаст два
               предупреждения,   суть  которых  абсолютно  не  повлияет
               на вашу программу.

       3.2.2 Работа со спрайтами

     Файл  LB_TEXT2  содержит подпрограммы для работы со спрайтами. Для
их  правильной  работы  вы должны настроить библиотеку на спрайт - файл
(смотрите   пункт   3.2.3).  Расмотрим  вначале  команды  не  требующие
параметров.  Это  команды  ATOF и ATON. Первая из них запрещает перенос
атрибутов во время операций со спрайтами, другая - разрещает.

     CALL ATOF - запрет на перенос атрибутов.

     CALL ATON - разрешение переноса атрибутов.

  ВНИМАНИЕ  !  Некоторые     команды,    работающие    со    спрайтами,
               автоматически  выполняют  ATOF.  Tак  что  вам придеться
               иногда выполнять команду ATON.

     Другой  блок  команд позволяет производить действия над спрайтами.
Они  позволяют инвертировать,  сдвигать и выполнять другие операции над
спрайтами. Эти команды требуют, чтобы в аккумуляторе был номер спрайта.

     LD A,#10  - задаем номер спрайта.
   
     CALL INVM - инвертируем спрайт в памяти.

     Исключение  состовляют  5  команд,  которые требует дополнительных
параметров.  Для команды SETM нужно задать по адресу (АDR + 6) атрибуты
спрайта (АDR - адрес ассемблирования библиотеки).
     Команды  WCRM  и  SCRM  требуют,  чтобы  в  регистре  В находилось
значение шага скроллинга в пикселях, а в А - номер спрайта.
     Команда  DSPM,  выполняющая увеличение спрайта в два раза, требуeт
чтобы  в  регистре  В  находился номер исходного спрайта, а в С - номер
принимающего спрайта, а аккумулятор не используется.    
                               - 4 -

     А  команда SPNM, выполняющая поворот спрайта на 90 градусов, чтобы
в  регистре  С  находился  номер  исходного  спрайта,  а  в  В  - номер
принимающего спрайта, аккумулятор не используется.
     В библиотеке изменены команды скроллинга атрибутов, теперь команды
AWLM  и  ARWM выполняют циклический  скроллинг атрибутов соответственно
влево  и  вправо,  а  команды ASLM и ASRM - обычный скроллинг атрибутов
влево  и вправво. Формат задания для них параметров не изменен, то есть
в аккумулятор нужно поместить номер спрайта.
     Теперь  перейдем  к  командам  обмена экрана со спрайтами. Команды
GTBL  и  PTBL  осуществляют вывод, первая с экрана монитора в спрайт, а
другая  -  переносит  спрайт на экран. Существуют команды каждого вида,
которые  накладывают  по принципам: AND (и), OR (или), XOR (исключающее
или).  Для  всех  этих  команд  вы должны в аккумулятор поместить номер
спрайта,  в  В - вертикальную координату экрана (напомню, координаты на
экране  изменяются в пределах по X от 0 до 31, а по Y от 0 до 23) , а в
регистр С - горизонтальную, то есть X.
     LD A,#05  - задаем номер спрайта.

     LD B,#01  - задаем координату Y.

     LD C,#02  - задаем координату X.

     CALL PTBL - выдодим 5 спраыт на экран.

     Операторы  вывода  окна  спрайта  на экран (PWBL,PWND,PWOR,PWXR) и
операторы  записи  экрана  в окно спрайта (GWBL,GWND,GWOR,GWXR) требуют
наибольших затрат от программиста. Они подобны предыдущим командам, так
же  накладыеают изображение 4-мя принципами. Но для их исполнения нужно
записать в аккумулятор процессора номер спрайта, над которым производит
действие  команда.  В  регистр  В  записать  координату Y экрана, в С -
координату  X  экрана.  Далее  будьте  внимательны!  В  регистр D нужно
поместить  координату  Y  верхнего  левого  угла  окна  спрайта,  в Е -
координату  X  окна  спрайта,  в  регистр  Н  -  размер окна спрайта по
вертикали  (высота  окна  спрайта)  ,  в L - размер окна по горизонтали
(ширина окна спрайта).
     LD A,#10  - задаем номер спраита.

     LD B,#05  - задаем координату Y на экране.

     LD C,#05  - задаем координату X ка экране.

     LD D,#01  - задаем координату Y в спрайте.
  
     LD E,#02  - задаем координату X в спрайте.

     LD H,#07  - задаем высоту окна в спрайте.
 
     LD L,#04  - задаем ширину окна в спрайте.

     CALL GWBL - записываем в окно спрайта изображение 
                 с экрана.

  ВНИМАНИЕ  !  Данные  команды  не  выполняют  действия  над атрибутами
               экрана  или  спрайта  взависимости от команды. Для этого
               существуют  комадны  GWAT и PWAT, которые соответственно
               переносят  атрибуты  с экрана в окно спрайта и наоборот.
               Формат парамаетов тот же.   
                               - 5 -

     И,  наконец,  последняя  группа  команд  производящая действия над
спрайтами.  Команды  GMBL,GMND,GMOR,GMXR  копируют  или  накладывают по
принципам  AND,  OR,  XOR  спрайт  в  окно  другого  спрайта. А команды
PMBL,PMND,PMOR,PMXR  копируют или накладывают по принципам AND, OR, XOR
окно  спрайта  в другой спрайт. Для их выполнения поместите в регистр D
координату  Y  окна  спрайта,  а  в  Е - координату Х окна спрайта. Для
группы  команды  GMBL  в  регистр  В  нужно записать номер принимающего
спрайта,  а в С - исходный. А для группы команды PMBL в регистр С нужно
записать номер принимающего спрайта, а в В - исходный.

     LD B,#01  - записываем в регистр номер исходного спрайта.

     LD C,#02  - записываем в регистр номер принимающего
                 спрайта.
     LD D,#01  - записываем координату Y окна спрайта.

     LD E,#01  - записываем координату Х окна спрайта.

     CALL PMBL - копируем окно спрайта в другой спрайт.

  ВНИМАНИЕ  !  Данные  команды  не  выполняют  действия  над атрибутами
               спрайтов.  Для  этого  существуют  комадны  GMAT и PMAT,
               которые соответственно переносят атрибуты спрайта в окно
               спрайта  и  наоборот.  Формат параметров тот же, что и у
               рассмотренных команд выше.

     Вот,   наконец,   и   окончен  обзор  подпрограмм,  работающих  со
спрайтами, библиотеки LASER BASIC.

  ВНИМАНИЕ  !  При  использовании  подпрограммам,  работающих  с окнами
               спрайта, следует помнить, что параметры спрайта или окна
               спрайта  должны  соответствовать  реальным  размерам, то
               есть  размеры окна не выходят за спрайт, окно спрайта не
               больше  принимающего спрайта и тому подобное. Иначе ваша
               программа  выйдет  на стандартную подпрограмму обработки
               ошибок,  выйдя  в  БЕЙСИК  с  выдачей  ошибки Q Parametr
               error.


 3.2.3 Работа со спрайт-файлом
  
     Библиотека  позволяет  изменять  размеры спрайт - файла, создавать
новые  и  уничтожать  старые спрайты. Разберем все подробно. Библиотека
определяет  расположение  спрайт  -  файла,  по содержимому специальных
ячеек  памяти. Ячейки ADR+2, ADR+3 содержат адрес нижней границы спрайт
файла (START), а ADR+4, ADR+5 - адрес верхней (END). В ячейке с адресом
END  всегда  должен  быть  записан  ноль  - метка конца спрайт - файла.
Заданием этих ячеек вы можете задать положение спрайт - файла в памяти.
Адрес ADR - есть адрес ассемблирования библиотеки.
     Объем  памяти (в байтах), занимаемый одним спрайтом, расчитывается
по формуле: 9*Н*D+5, где Н и D - высота и ширина спрайта в знакоместах.
Формат  хранения  спрайта в спрайт - файле приведен в таблице 1 (адреса
увеличиваются снизу вверх).   
                               - 6 -

   ТАБЛИЦА 1.
┌─────────────────────────────────────┐
│    ДАННЫЕ ОБ АТРИБУТАХ СПРАЙТА      │  ширина х высоту байт
├─────────────────────────────────────┤
│ ДАННЫЕ О СОСТОЯНИИ ПИКСЕЛЕЙ СПРАЙТА │  8 х ширина х высоту байт
├─────────────────────────────────────┤
│           ВЫСОТА СПРАЙТА            │  1 байт
├─────────────────────────────────────┤
│           ШИРИНА СПРАЙТА            │  1 байт
├─────────────────────────────────────┤
│      АДРЕС СЛЕДУЮЩЕГО СПРАЙТА       │  2 байта
├─────────────────────────────────────┤
│            НОМЕР СПРАЙТА            │  1 байт
└─────────────────────────────────────┘

Чтобы  расширить область спрайт - файла для нового спрайта, нужно после
задания номера спрайта, его высоты и ширины:

     LD A,#01  - задание номера спрайта.

     LD H,#06  - задание высоты спрайта.

     LD L,#10  - задание ширины спрайта.

Выполнить одну из команд ISPR или SPRT:
   
     CALL SPRT

     Они  отличаются  друг  от  друга  тем,  что ISPR расширяет область
спрайт - файла за счет понижения его нижней границы, а SPRT - повышения
верхней.   Обратим   внимание   на  то,  что  этими   командами  только
резервируется   место  под  новый  спрайт,  а  само  изображение  нужно
записывать  в  спрайт - файл с помощью команды GTBL. Расширение области
спрайт  - файла требует особой осторожности. Необходдимо следить, чтобы
область спрайт - файла не пересекла вашу программу.
     При  создании спрайта с уже существующем номером с помощью команды
SPRT старый спрайт уничтожается и замещаетвя новым. Команда ISPR в этом
случае  просто не выполняется. Поэтому перед использзованием ISPR нужно
знать существует спрайт с данным номером или нет.
     Если  спрайт  существует, то его возможно удалить командами DSPR и
WSPR. Для этого нужно в аккумунятор поместить номер спрайта и выполнить
одну  из  команд  DSPR  или WSPR. Один, соответственно, сдвигает нижнюю
границу спрайт - файла, другой - верхнюю.

     LD A,#11  - уничтожается спрайт с номером 17,
                 со сдвигом нижней границы спрайт-
     CALL DSPR   файла.

     Инога  может  возникнуть необходимость переместить спрайт - файл в
памяти, к примеру, чтобы зарезервировать пространство под какие-то ваши
нужды.  Для этих целей служит команда RLCT. Перед его выполнением нужно
присвоить  регистру HL процессора значение, задающее смещение от начала
спрайт  - файла. Теоретически это значение равно от 0 до 65535. Реально
же нужно следить, чтобы перемещаемый спрайт - файл не попал в "жизненно
важные"  области памяти. Если спрайт - файл нужно переместить вверх, то
необходимо  в  регистр  HL  загрузить  величину смещения. Если вниз, то
значение регистра HL должно равняться 65535 - (смещение).   
                               - 7 -

     LD HL,#01FF

     CALL RLCT - перемещение спрайт - файла.

     
  ПРИЛОЖЕНИЕ 1.

╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Преобразование окна экрана                         ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  INVV    │ Инвертирование окна экрана    │ В регистр В - координата ║
╟──────────┼───────────────────────────────┤ Y окна экрана, а в С -   ║
║  MIRV    │ Зеркальное отображение окна   │ координата Х, в D - ра-  ║
║          │ экрана                        │ змер окна по вертикали,  ║
╟──────────┼───────────────────────────────┤ в Е - размер окна по го- ║
║  MARV    │ Зеркальное отображение атри-  │ ризонтали.               ║
║          │ бутов окна экрана             │ Для команды SETV в ячей- ║
╟──────────┼───────────────────────────────┤ ку с адресом АDR + 6     ║
║  SETV    │ Установка атрибутов в окне    │ значение атрибутов окна  ║
║          │ экрана                        │ экрана.                  ║
╟──────────┼───────────────────────────────┤                          ║
║  CLSV    │ Oчистка окна экрана           │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг окна экрана                              ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  WL1V    │ Циклический скроллинг окна    │ В регистр В - координата ║
║          │ экрана на 1 пиксель влево     │ Y окна экрана, а в С -   ║
╟──────────┼───────────────────────────────┤ координата Х, в D - ра-  ║
║  WR1V    │ Циклический скроллинг окна    │ змер окна по вертикали,  ║
║          │ экрана на 1 пиксель вправо    │ в Е - размер окна по го- ║
╟──────────┼───────────────────────────────┤ ризонтами.               ║
║  WL4V    │ Циклический скроллинг окна    │                          ║
║          │ экрана на 4 пикселя влево     │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WR4V    │ Циклический скроллинг окна    │                          ║
║          │ экрана на 4 пикселя вправо    │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WL8V    │ Циклический скроллинг окна    │                          ║
║          │ экрана на 8 пикселей влево    │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WR8V    │ Циклический скроллинг окна    │                          ║
║          │ экрана на 8 пикселей вправо   │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SL1V    │ Скроллинг окна экрана на      │                          ║
║          │ 1 пиксель влево               │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SR1V    │ Скроллинг окна экрана на      │                          ║
║          │ 1 пиксель вправо              │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SL4V    │ Скроллинг окна экрана на      │                          ║
║          │ 4 пикселя влево               │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SR4V    │ Скроллинг окна экрана на      │                          ║
║          │ 4 пикселя вправо              │                          ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝ 
                               - 8 -
     
  Продолжение приложения 1.            
╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг окна экрана                              ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  SL8V    │ Скроллинг окна экрана на      │ В регистр В - координата ║
║          │ 8 пикселей влево              │ Y окна экрана, а в С -   ║
╟──────────┼───────────────────────────────┤ координата Х, в D - ра-  ║
║  SR8V    │ Скроллинг окна экрана на      │ змер окна по вертикали,  ║
║          │ 8 пикселей вправо             │ в Е - размер окна по го- ║
╟──────────┼───────────────────────────────┤ ризонтами.               ║
║  WCRV    │ Циклический вертикальный      │ Для команд WCRV и SCRV   ║
║          │ скроллинг окна экрана         │ дополнительно нужно за-  ║
╟──────────┼───────────────────────────────┤ писать в аккумулятор     ║
║  SCRV    │ Вертикальный скроллинг окна   │ значение шага и направ-  ║
║          │ экрана                        │ ление скроллинга         ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг атрибутов окна экрана                    ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  AWLV    │ Циклический скроллинг атри-   │ В регистр В - координата ║
║          │ бутов окна экрана влево       │ Y окна экрана, а в С -   ║
╟──────────┼───────────────────────────────┤ координата Х, в D - ра-  ║
║  ASLV    │ Скроллинг арибутов окна       │ змер окна по вертикали,  ║
║          │ экрана влево                  │ в Е - размер окна по го- ║
╟──────────┼───────────────────────────────┤ ризонтали.               ║
║  AWRV    │ Циклический скролинг атри-    │                          ║
║          │ бутов окна экрана вправо      │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ASRV    │ Скроллинг атрибутов окна      │                          ║
║          │ экрана вправо                 │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ATUV    │ Циклический скроллинг атрибу- │                          ║
║          │ тов окна экрана вверх         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ATDV    │ Циклический скроллинг атрибу- │                          ║
║          │ тов окна экрана вниз          │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Преобразование спрайтов в памяти                   ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  CLSM    │ Очистка спрайта               │ В аккумулятор нужно запи-║
╟──────────┼───────────────────────────────┤ сать номер спрайта.      ║
║  INVM    │ Инвертирование спрайта        │ Для команды DSPM в ре-   ║
╟──────────┼───────────────────────────────┤ гистр С - исходный, а в  ║
║  MIRM    │ Зеркальное отображение спрайта│ В - принимающий спрайт.  ║
╟──────────┼───────────────────────────────┤ Для команды SPNM в ре-   ║
║  MARM    │ Зеркальное отображение атри-  │ гистр В - изходный, а в  ║
║          │ бутов спрайта                 │ С - принимащий спрайт.   ║
╟──────────┼───────────────────────────────┤ В этих командах аккуму-  ║
║  SETM    │ Установка атрибутов спрайта   │ лятор не используется.   ║
╟──────────┼───────────────────────────────┤ Для команды SETM нужно:  ║
║  DSPM    │ Увелечение в два раза разме-  │ в акумулятор записать    ║
║          │ ров спрайта                   │ номер спрайта, а по      ║
╟──────────┼───────────────────────────────┤ адресу ADR + 6 - атри-   ║
║  SPNM    │ Поворот спрайта на 90 граду-  │ буты спрайта.            ║
║          │ сов                           │                          ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝  
                               - 9 -

  Продолжение приложения 1.
╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг атрибутов спрайтов в памяти              ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  AWLМ    │ Циклический скроллинг атри-   │ В аккумулятор нужно по-  ║
║          │ бутов спрайта влево           │ местить номер спрайта.   ║
╟──────────┼───────────────────────────────┤                          ║
║  ASLМ    │ Скроллинг атрибутов спрайта   │                          ║
║          │ влево                         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  AWRМ    │ Циклический скролинг атри-    │                          ║
║          │ бутов спрайта вправо          │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ASRМ    │ Скроллинг атрибутов спрайта   │                          ║
║          │ вправо                        │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ATUМ    │ Циклический скроллинг атрибу- │                          ║
║          │ тов спрайта вверх             │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  ATDМ    │ Циклический скроллинг атрибу- │                          ║
║          │ тов спрайта вниз              │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг спрайтов в памяти                        ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  WL1М    │ Циклический скроллинг спрайта │ В аккумулятор нужно по-  ║
║          │ на 1 пиксель влево            │ местить номер спрайта.   ║
╟──────────┼───────────────────────────────┤                          ║
║  WR1М    │ Циклический скроллинг спрайта │                          ║
║          │ на 1 пиксель вправо           │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WL4М    │ Циклический скроллинг спрайта │                          ║
║          │ на	4 пикселя влево            │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WR4М    │ Циклический скроллинг спрайта │                          ║
║          │ на 4 пикселя вправо           │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WL8М    │ Циклический скроллинг спрайта │                          ║
║          │ на	8 пикселей влево           │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  WR8М    │ Циклический скроллинг спрайта │                          ║
║          │ на 8 пикселей вправо          │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SL1М    │ Скроллинг спрайта на 1 пиксель│                          ║
║          │ влево                         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SR1М    │ Скроллинг спрайта на 1 пиксель│                          ║
║          │ вправо                        │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SL4М    │ Скроллинг спрайта на 4 пикселя│                          ║
║          │ влево                         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SR4М    │ Скроллинг спрайта на 4 пикселя│                          ║
║          │ вправо                        │                          ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝
                               - 10 -

  Продолжение приложения 1.

╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Скроллинг спрайов в памяти                         ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  SL8М    │ Скроллинг спрайта на          │ В аккумулятор нужно по-  ║
║          │ 8 пикселей                    │ местить номер спрайта.   ║
╟──────────┼───────────────────────────────┤ Для команд WCRM и SCRM   ║
║  SL8М    │ Скроллинг спрайта на          │ дополнительно нужно за-  ║
║          │ 8 пикселей                    │ писать в регистр В шаг   ║
╟──────────┼───────────────────────────────┤ и направление скроллинга.║
║  WCRM    │ Циклический вертикальный      │                          ║
║          │ скроллинг спрайта             │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  SCRM    │ Скроллинг вертикалььный       │                          ║
║          │ спрайта                       │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перенос атрибутов                                  ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  ATOF    │ Запрещение переноса атрибутов │ Без параметров.          ║
╟──────────┼───────────────────────────────┤                          ║
║  ATON    │ Разрешение переноса атрибутов │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: окно экрана - спрайт                  ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  GTBL    │ Копирование окна экрана в     │ В аккумулятор номер      ║
║          │ спрайт                        │ спрайта, в регистр В -   ║
╟──────────┼───────────────────────────────┤ координата Y окна экра-  ║
║  GTOR    │ Наложение окна экрана на      │ на, в С - координата Х.  ║
║          │ спрайт по принципу OR         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  GTXR    │ Наложение окна экрана на      │                          ║
║          │ спрайт по принципу XOR        │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  GTND    │ Наложение окна экрана на      │                          ║
║          │ спрайт по принципу AND        │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: спрайт - окно экрана                  ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  PTBL    │ Копирование спрайта в окно    │ В аккумулятор номер      ║
║          │ экрана                        │ спрайта, в регистр В -   ║
╟──────────┼───────────────────────────────┤ координата Y окна экра-  ║
║  PTOR    │ Наложение спрайта на окно     │ на, в С - координата Х.  ║
║          │ экрана по принципу OR         │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  PTXR    │ Наложение спрайта на окно     │                          ║
║          │ экрана по принципу XOR        │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  PTND    │ Наложение спрайта на окно     │                          ║
║          │ экрана по принципу AND        │                          ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝                

                               - 11 -

  Продолжение приложения 1.

╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: окно экрана - окно спрайта            ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  GW6L    │ Копирование окна экрана в     │ В аккумулятор номер      ║
║          │ окно спрайта                  │ спрайта, в регистр В -   ║
╟──────────┼───────────────────────────────┤ координата Y окна экра-  ║
║  GWOR    │ Наложение окна экрана на окно │ на, в С - координата Х.  ║
║          │ спрайта по принципу OR        │ В регистр D - координа-  ║
╟──────────┼───────────────────────────────┤ ту Y окна спрайта, в Е - ║
║  GWXR    │ Наложение окна экрана на окно │ координату Х окна спрай- ║
║          │ спрайта по принципу XOR       │ та, в L - размер окна    ║
╟──────────┼───────────────────────────────┤ спрайта по горизонтали,  ║
║  GWND    │ Наложение окна экрана на окно │ в Н - размер окна спрай- ║
║          │ спрайта по принципу AND       │ та по вертикали.         ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: окно спрайта - окно экрана            ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  PW6L    │ Копирование окна спрайта в    │ В аккумулятор номер      ║
║          │ окно экрана                   │ спрайта, в регистр В -   ║
╟──────────┼───────────────────────────────┤ координата Y окна экра-  ║
║  PWOR    │ Наложение окна спрайта на окно│ на, в С - координата Х.  ║
║          │ экрана по принципу OR         │ В регистр D - координа-  ║
╟──────────┼───────────────────────────────┤ ту Y окна спрайта, в Е - ║
║  PWXR    │ Наложение окна спрайта на окно│ координату Х окна спрай- ║
║          │ экрана по принципу XOR        │ та, в L - размер окна    ║
╟──────────┼───────────────────────────────┤ спрайта по горизонтали,  ║
║  PWND    │ Наложение окна спрайта на окно│ в Н - размер окна спрай- ║
║          │ экрана по принципу AND        │ та по вертикали.         ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перенос атрибутов: экран - спрайт                  ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  GWАТ    │ Перенос атрибутов окна экрана │ В аккумулятор номер      ║
║          │ в окно спрайта                │ спрайта, в регистр В -   ║
║          │                               │ координата Y окна экра-  ║
║          │                               │ на, в С - координата Х.  ║
║          │                               │ В регистр D - координа-  ║
╟──────────┼───────────────────────────────┤ ту Y окна спрайта, в Е - ║
║  PWAT    │ Перенос атрибутов окна спрайта│ координату Х окна спрай- ║
║          │ в окно экрана                 │ та, в L - размер окна    ║
║          │                               │ спрайта по горизонтали,  ║
║          │                               │ в Н - размер окна спрай- ║
║          │                               │ та по вертикали.         ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перенос атрибутов: спрайт - спрайт                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  GМАТ    │ Перенос атрибутов спрайта     │ В регистр D - размер ок- ║
║          │ в окно другого спрайта        │ на спрайта по вертикали, ║
║          │                               │ в Е - по горизонтали, в  ║
║          │                               │ В - номер принимающего   ║
║          │                               │ спрайта, в С - исходного.║
╚══════════╧═══════════════════════════════╧══════════════════════════╝

                               - 12 -

  Продолжение приложения 1.
╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: спрайт - окно спрайта                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  GMBL    │ Копирование спрайта в окно    │ В регистр D - размер ок- ║
║          │ другого спрайта               │ на спрайта по вертикали, ║
╟──────────┼───────────────────────────────┤ в Е - по горизонтали, в  ║
║  GMOR    │ Наложение одного спрайта на   │ В - номер принимающего   ║
╢          │ окно другого по принципу OR   │ спрайта, в С - исходного.╢
╢──────────┼───────────────────────────────┤                          ║
║  GMXR    │ Наложение одного спрайта на   │                          ║
║          │ окно другого по принципу XOR  │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  GMND    │ Наложение одного спрайта на   │                          ║
║          │ окно другого по принципу AND  │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перемещения: окно спрайта - спрайт                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  PMBL    │ Копирование окна спрайта в    │ В регистр D - размер ок- ║
║          │ другой спрайт                 │ на спрайта по вертикали, ║
╟──────────┼───────────────────────────────┤ в Е - по горизонтали, в  ║
║  PMOR    │ Наложение окна спрайта на     │ С - номер принимающего   ║
╢          │ другой спрайт по принципу OR  │ спрайта, в В - исходного.╢
╢──────────┼───────────────────────────────┤                          ║
║  PMXR    │ Наложение окна спрайта на     │                          ║
║          │ другой спрайт по принципу XOR │                          ║
╟──────────┼───────────────────────────────┤                          ║
║  PMND    │ Наложение окна спрайта на     │                          ║
║          │ другой спрайт по принципу AND │                          ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Перенос атрибутов: спрайт - спрайт                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  РМАТ    │ Перенос атрибутов окна спрайта│ В регистр D - размер ок- ║
║          │ в другой спрайт               │ на спрайта по вертикали, ║
║          │                               │ в Е - по горизонтали, в  ║
║          │                               │ С - номер принимающего   ║
║          │                               │ спрайта, в В - исходного.║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Операции с областью спрайт - файла                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  DSPR    │ Уничтожение спрайта(повыщается│ В аккумулятор номер      ║
║          │ нижняя граница спрайт-файла)  │ спрайта записывается.    ║
╟──────────┼───────────────────────────────┤                          ║
║  WSPR    │ Уничтожение спрайта(понижается│                          ║
║          │ верхняя граница спрайт-файла) │                          ║
╟──────────┼───────────────────────────────┼──────────────────────────╢
║  ISPR    │ Создание спрайта заданных раз-│ В аккумулятор номер соз- ║
║          │ меров(понижается нижняя грани-│ даваемого спрайта, в Н - ║
║          │ ца спрайт-файла).             │ размер спрайта по верти- ║
╟──────────┼───────────────────────────────┤ кали, в L - по горизонта-║
║  SPRT    │ Создание спрайта заданный раз-│ ли.                      ║
║          │ меров(повышается верхняя гра- │                          ║
║          │ ница спрайт-файла).           │                          ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝

                               - 13 -

  Окончание приложения 1.
╔══════════╤═══════════════════════════════╤══════════════════════════╗
║ НАЗВАНИЕ │           ДЕЙСТВИЕ            │         ПАРАМЕТРЫ        ║
╟──────────┴───────────────────────────────┴──────────────────────────╢
║                  Операции с областью спрайт - файла                 ║
╟──────────┬───────────────────────────────┬──────────────────────────╢
║  RLCT    │ Перемещение спрайт-файла в    │ В регистр HL нужно запи- ║
║          │ памяти                        │ сать значение смещения   ║
║          │                               │ спрайт-файла относитель- ║
║          │                               │ но его положения.        ║
╚══════════╧═══════════════════════════════╧══════════════════════════╝
  

ПРИМЕЧАНИЕ:    Буква  А  в командах обоззначает, что команда работает с
               атрибутами;  сочетания  ND,  OR,  XR - показывают способ
               наложения   соответственно   AND   (и),  OR  (или),  XOR
               (исключающее или) цифры 1,4,8 обозмачают шаг скроллинга;
               сочетание  SPR  - работа со спрайт - файлом; М работа со
               спрайтани;  V  - работа с экраном; в командах скроллинга
               буква W обозначает циклический скроллинг, а S - простой,
               буквы  L и R - обозначают влево и вправо соответственно;
               P - put; G - get

     Использованная литература:

 1. "ДИАЛЕКТЫ БЕЙСИКА ДЛЯ ZX SPECTRUM" под редакцией Н.Родионова и
     А.Ларченко.



 Если вниз, то
значение регистра HL должно равняться 65535 - (смещение).   
                               - 7 -

     LD HL,#01FF

     CALL RLCT - перемещение спрайт - файл