
import com.igormaznitsa.midp.DynamicEngine.DynamicImage_8bpp;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.FileOutputStream;

public class TestD8BPP
{
    public static final void main(String[] _args)
    {
        byte[] ab_imageBlock = new byte[IMAGE_FILE_SIZE];
        try
        {
            new FileInputStream("set_5.bin").read(ab_imageBlock);
        }
        catch (IOException e)
        {
            e.printStackTrace();  //To change body of catch statement use Options | File Templates.
        }

        try
        {
            DynamicImage_8bpp p_di = new DynamicImage_8bpp(128,128,PALETTE_SIZE);

            p_di.loadPNGPaletteFromArray(PNG_COMMON_PALETTE);

            p_di.fillImage(7);

//            p_di.drawSpriteFromLibrary(ab_imageBlock,DECODING_ARRAY[IMG_FP],-5,-5);
            p_di.drawSpriteFromLibrary(ab_imageBlock,DECODING_ARRAY[IMG_PLAYERCAR],125,-3);
            p_di.drawSpriteFromLibrary(ab_imageBlock,DECODING_ARRAY[IMG_POLICECAR0],50,122);


            new FileOutputStream("png.png").write(p_di.encodeToPNG());
        }
        catch (IOException e)
        {
            e.printStackTrace();  //To change body of catch statement use Options | File Templates.
        }

    }

    private static final int IMG_PLAYERCAR = 0;
    private static final int IMG_POLICECAR0 = 1;
    private static final int TOTAL_IMAGES_NUMBER = 2;

    private static final int [] DECODING_ARRAY =
    {
      0x0,
      0x78
    };
    private static final int IMAGE_FILE_SIZE = 230;

    private static final int PALETTE_SIZE = 63;
    private static final byte [] COMMON_PALETTE = new byte[]
    {
      (byte)0x0,(byte)0xff,(byte)0x0,
      (byte)0xed,(byte)0x1c,(byte)0x24,
      (byte)0xec,(byte)0x0,(byte)0x8c,
      (byte)0x40,(byte)0x0,(byte)0x40,
      (byte)0x80,(byte)0x0,(byte)0x80,
      (byte)0xff,(byte)0x0,(byte)0xff,
      (byte)0xd,(byte)0x0,(byte)0x4c,
      (byte)0x0,(byte)0x0,(byte)0xa0,
      (byte)0x80,(byte)0x0,(byte)0xff,
      (byte)0x0,(byte)0x0,(byte)0xa0,
      (byte)0x80,(byte)0x80,(byte)0xff,
      (byte)0x0,(byte)0x0,(byte)0xff,
      (byte)0x80,(byte)0xff,(byte)0xff,
      (byte)0x0,(byte)0xff,(byte)0xff,
      (byte)0x1c,(byte)0xbb,(byte)0xb4,
      (byte)0x6c,(byte)0xd9,(byte)0xd9,
      (byte)0x0,(byte)0x74,(byte)0x6b,
      (byte)0x0,(byte)0x59,(byte)0x52,
      (byte)0x0,(byte)0x80,(byte)0x40,
      (byte)0x0,(byte)0x58,(byte)0x26,
      (byte)0x0,(byte)0x5e,(byte)0x20,
      (byte)0x80,(byte)0xff,(byte)0x80,
      (byte)0x0,(byte)0xff,(byte)0x40,
      (byte)0x59,(byte)0x85,(byte)0x27,
      (byte)0xff,(byte)0xff,(byte)0x80,
      (byte)0xff,(byte)0xff,(byte)0x0,
      (byte)0x82,(byte)0x7b,(byte)0x0,
      (byte)0x0,(byte)0x80,(byte)0xff,
      (byte)0xfc,(byte)0xa4,(byte)0x43,
      (byte)0xa3,(byte)0x62,(byte)0x9,
      (byte)0xf7,(byte)0x94,(byte)0x1d,
      (byte)0xc7,(byte)0xb2,(byte)0x99,
      (byte)0xfd,(byte)0xc6,(byte)0x89,
      (byte)0xc6,(byte)0x9c,(byte)0x6d,
      (byte)0x80,(byte)0x40,(byte)0x0,
      (byte)0x75,(byte)0x4c,(byte)0x24,
      (byte)0x8c,(byte)0x62,(byte)0x39,
      (byte)0xa6,(byte)0x7c,(byte)0x52,
      (byte)0x99,(byte)0x86,(byte)0x75,
      (byte)0x73,(byte)0x63,(byte)0x57,
      (byte)0xa0,(byte)0x41,(byte)0xd,
      (byte)0xf9,(byte)0xad,(byte)0x81,
      (byte)0xf6,(byte)0x8e,(byte)0x56,
      (byte)0x53,(byte)0x47,(byte)0x41,
      (byte)0xff,(byte)0x80,(byte)0x0,
      (byte)0xf6,(byte)0x96,(byte)0x79,
      (byte)0x36,(byte)0x2f,(byte)0x2d,
      (byte)0xff,(byte)0x80,(byte)0x40,
      (byte)0xff,(byte)0x0,(byte)0x0,
      (byte)0x9e,(byte)0xb,(byte)0xe,
      (byte)0xff,(byte)0xff,(byte)0xff,
      (byte)0xda,(byte)0xda,(byte)0xda,
      (byte)0xa7,(byte)0xa7,(byte)0xa7,
      (byte)0x81,(byte)0x81,(byte)0x81,
      (byte)0x73,(byte)0x73,(byte)0x73,
      (byte)0x66,(byte)0x66,(byte)0x66,
      (byte)0x3d,(byte)0x3d,(byte)0x3d,
      (byte)0x13,(byte)0x13,(byte)0x13,
      (byte)0x0,(byte)0x0,(byte)0x0,
      (byte)0x0,(byte)0x0,(byte)0x0,
      (byte)0x0,(byte)0x0,(byte)0x0,
      (byte)0x0,(byte)0x0,(byte)0x0,
      (byte)0x0,(byte)0x0,(byte)0x0
    };

    private static final byte [] PNG_COMMON_PALETTE = new byte []
    {(byte)0x0,(byte)0x0,(byte)0x0,(byte)0xbd,(byte)0x50,(byte)0x4c,(byte)0x54,(byte)0x45,(byte)0x0,(byte)0xff,(byte)0x0,(byte)0xed,(byte)0x1c,(byte)0x24,(byte)0xec,(byte)0x0,(byte)0x8c,(byte)0x40,(byte)0x0,(byte)0x40,(byte)0x80,(byte)0x0,(byte)0x80,(byte)0xff,(byte)0x0,(byte)0xff,(byte)0xd,(byte)0x0,(byte)0x4c,(byte)0x0,(byte)0x0,(byte)0xa0,(byte)0x80,(byte)0x0,(byte)0xff,(byte)0x0,(byte)0x0,(byte)0xa0,(byte)0x80,(byte)0x80,(byte)0xff,(byte)0x0,(byte)0x0,(byte)0xff,(byte)0x80,(byte)0xff,(byte)0xff,(byte)0x0,(byte)0xff,(byte)0xff,(byte)0x1c,(byte)0xbb,(byte)0xb4,(byte)0x6c,(byte)0xd9,(byte)0xd9,(byte)0x0,(byte)0x74,(byte)0x6b,(byte)0x0,(byte)0x59,(byte)0x52,(byte)0x0,(byte)0x80,(byte)0x40,(byte)0x0,(byte)0x58,(byte)0x26,(byte)0x0,(byte)0x5e,(byte)0x20,(byte)0x80,(byte)0xff,(byte)0x80,(byte)0x0,(byte)0xff,(byte)0x40,(byte)0x59,(byte)0x85,(byte)0x27,(byte)0xff,(byte)0xff,(byte)0x80,(byte)0xff,(byte)0xff,(byte)0x0,(byte)0x82,(byte)0x7b,(byte)0x0,(byte)0x0,(byte)0x80,(byte)0xff,(byte)0xfc,(byte)0xa4,(byte)0x43,(byte)0xa3,(byte)0x62,(byte)0x9,(byte)0xf7,(byte)0x94,(byte)0x1d,(byte)0xc7,(byte)0xb2,(byte)0x99,(byte)0xfd,(byte)0xc6,(byte)0x89,(byte)0xc6,(byte)0x9c,(byte)0x6d,(byte)0x80,(byte)0x40,(byte)0x0,(byte)0x75,(byte)0x4c,(byte)0x24,(byte)0x8c,(byte)0x62,(byte)0x39,(byte)0xa6,(byte)0x7c,(byte)0x52,(byte)0x99,(byte)0x86,(byte)0x75,(byte)0x73,(byte)0x63,(byte)0x57,(byte)0xa0,(byte)0x41,(byte)0xd,(byte)0xf9,(byte)0xad,(byte)0x81,(byte)0xf6,(byte)0x8e,(byte)0x56,(byte)0x53,(byte)0x47,(byte)0x41,(byte)0xff,(byte)0x80,(byte)0x0,(byte)0xf6,(byte)0x96,(byte)0x79,(byte)0x36,(byte)0x2f,(byte)0x2d,(byte)0xff,(byte)0x80,(byte)0x40,(byte)0xff,(byte)0x0,(byte)0x0,(byte)0x9e,(byte)0xb,(byte)0xe,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xda,(byte)0xda,(byte)0xda,(byte)0xa7,(byte)0xa7,(byte)0xa7,(byte)0x81,(byte)0x81,(byte)0x81,(byte)0x73,(byte)0x73,(byte)0x73,(byte)0x66,(byte)0x66,(byte)0x66,(byte)0x3d,(byte)0x3d,(byte)0x3d,(byte)0x13,(byte)0x13,(byte)0x13,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0xc8,(byte)0x5a,(byte)0xeb,(byte)0x7};
}
